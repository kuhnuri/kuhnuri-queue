/*
 * This file is generated by jOOQ.
*/
package generated.tables.records;


import generated.tables.Job;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobRecord extends UpdatableRecordImpl<JobRecord> implements Record7<String, OffsetDateTime, String, String, Integer, OffsetDateTime, Integer> {

    private static final long serialVersionUID = 772748203;

    /**
     * Setter for <code>public.job.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.job.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.job.created</code>.
     */
    public void setCreated(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.job.created</code>.
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.job.input</code>.
     */
    public void setInput(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.job.input</code>.
     */
    public String getInput() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.job.output</code>.
     */
    public void setOutput(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.job.output</code>.
     */
    public String getOutput() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.job.id</code>.
     */
    public void setId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.job.id</code>.
     */
    public Integer getId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.job.finished</code>.
     */
    public void setFinished(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.job.finished</code>.
     */
    public OffsetDateTime getFinished() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.job.priority</code>.
     */
    public void setPriority(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.job.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, OffsetDateTime, String, String, Integer, OffsetDateTime, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<String, OffsetDateTime, String, String, Integer, OffsetDateTime, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Job.JOB.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field2() {
        return Job.JOB.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Job.JOB.INPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Job.JOB.OUTPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Job.JOB.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field6() {
        return Job.JOB.FINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Job.JOB.PRIORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOutput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component6() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value2() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOutput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value6() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value1(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value2(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value3(String value) {
        setInput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value4(String value) {
        setOutput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value5(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value6(OffsetDateTime value) {
        setFinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord value7(Integer value) {
        setPriority(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobRecord values(String value1, OffsetDateTime value2, String value3, String value4, Integer value5, OffsetDateTime value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobRecord
     */
    public JobRecord() {
        super(Job.JOB);
    }

    /**
     * Create a detached, initialised JobRecord
     */
    public JobRecord(String uuid, OffsetDateTime created, String input, String output, Integer id, OffsetDateTime finished, Integer priority) {
        super(Job.JOB);

        set(0, uuid);
        set(1, created);
        set(2, input);
        set(3, output);
        set(4, id);
        set(5, finished);
        set(6, priority);
    }
}
