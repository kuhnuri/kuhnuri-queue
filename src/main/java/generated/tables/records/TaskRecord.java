/*
 * This file is generated by jOOQ.
*/
package generated.tables.records;


import generated.enums.Status;
import generated.tables.Task;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record11<String, String, String, String, Status, Integer, OffsetDateTime, OffsetDateTime, Integer, String, Integer> {

    private static final long serialVersionUID = -331137289;

    /**
     * Setter for <code>public.task.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.task.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.task.transtype</code>.
     */
    public void setTranstype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.task.transtype</code>.
     */
    public String getTranstype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.task.input</code>.
     */
    public void setInput(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.task.input</code>.
     */
    public String getInput() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.task.output</code>.
     */
    public void setOutput(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.task.output</code>.
     */
    public String getOutput() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.task.status</code>.
     */
    public void setStatus(Status value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.task.status</code>.
     */
    public Status getStatus() {
        return (Status) get(4);
    }

    /**
     * Setter for <code>public.task.id</code>.
     */
    public void setId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.task.id</code>.
     */
    public Integer getId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.task.processing</code>.
     */
    public void setProcessing(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.task.processing</code>.
     */
    public OffsetDateTime getProcessing() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.task.finished</code>.
     */
    public void setFinished(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.task.finished</code>.
     */
    public OffsetDateTime getFinished() {
        return (OffsetDateTime) get(7);
    }

    /**
     * Setter for <code>public.task.priority</code>.
     */
    public void setPriority(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.task.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.task.worker</code>.
     */
    public void setWorker(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.task.worker</code>.
     */
    public String getWorker() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.task.job</code>.
     */
    public void setJob(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.task.job</code>.
     */
    public Integer getJob() {
        return (Integer) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, String, Status, Integer, OffsetDateTime, OffsetDateTime, Integer, String, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, String, String, String, Status, Integer, OffsetDateTime, OffsetDateTime, Integer, String, Integer> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Task.TASK.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Task.TASK.TRANSTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Task.TASK.INPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Task.TASK.OUTPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Status> field5() {
        return Task.TASK.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Task.TASK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field7() {
        return Task.TASK.PROCESSING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field8() {
        return Task.TASK.FINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field9() {
        return Task.TASK.PRIORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Task.TASK.WORKER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Task.TASK.JOB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTranstype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOutput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Status component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component7() {
        return getProcessing();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component8() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component9() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getWorker();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component11() {
        return getJob();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTranstype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOutput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Status value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value7() {
        return getProcessing();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value8() {
        return getFinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value9() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getWorker();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getJob();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value1(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value2(String value) {
        setTranstype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value3(String value) {
        setInput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value4(String value) {
        setOutput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value5(Status value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value6(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value7(OffsetDateTime value) {
        setProcessing(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value8(OffsetDateTime value) {
        setFinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value9(Integer value) {
        setPriority(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value10(String value) {
        setWorker(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value11(Integer value) {
        setJob(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord values(String value1, String value2, String value3, String value4, Status value5, Integer value6, OffsetDateTime value7, OffsetDateTime value8, Integer value9, String value10, Integer value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(String uuid, String transtype, String input, String output, Status status, Integer id, OffsetDateTime processing, OffsetDateTime finished, Integer priority, String worker, Integer job) {
        super(Task.TASK);

        set(0, uuid);
        set(1, transtype);
        set(2, input);
        set(3, output);
        set(4, status);
        set(5, id);
        set(6, processing);
        set(7, finished);
        set(8, priority);
        set(9, worker);
        set(10, job);
    }
}
